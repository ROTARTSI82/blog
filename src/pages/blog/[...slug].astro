---
import "katex/dist/katex.min.css";
import "katex/dist/contrib/mhchem.min.js";
import "../../styles/blogs.css";

import { type CollectionEntry, render } from 'astro:content';
import Layout from "../../layouts/Layout.astro";
import { calcBlogIndex, BlogIndex, link } from "../../blog-util";

interface MDProps {
  post: any;
  leaf: string;
}

export async function getStaticPaths() {
  const { fulls, partials, paths } = await calcBlogIndex();

  function resolve(path: string, dict: any) {
    if (path.length == 0)
      return dict;
    let cursor: any = dict;
    for (const part of path.split('/'))
      cursor = cursor[part];
    return cursor;
  }

  return fulls.union(partials).keys().map(str => {
    const post = resolve(str, paths);
    return {
      params: { slug: str },
      props: { post, leaf: fulls.has(str) ? '1' : '0' }
    }
  }).toArray();
}

type Props = CollectionEntry<'blog'>;
let { post, leaf } = Astro.props as MDProps;
const { slug } = Astro.params;
const { Content } = await render(post);

const opt: Intl.DateTimeFormatOptions = {year: 'numeric', month: 'short', day: '2-digit'};

const date = post.data?.created?.toLocaleString(undefined, opt);
---

<Layout title={leaf === '1' ? post.data.title : `${slug}/ - Files`} ogtype="article">
  <link slot="in-head" rel="stylesheet" type="text/css" href="http://tikzjax.com/v1/fonts.css" />
  <!--<script slot="in-head" src="https://tikzjax.com/v1/tikzjax.js" />-->
  <script slot="in-head" src={link("/preprocess-tikz.js")}/>
  <script fetchpriority="low" async slot="in-head" src={link("/tikzjax.js")}/>

  <code>{leaf} {slug}{leaf == '0' ? '/' : ''}</code>
  {leaf === '1' ? <>
      <meta property="og:description" content={`${date} - ${post.data.subhead ?? "No description."}`} />
      <meta property="og:published_time" content={post.data.created} />
      <meta property="og:modified_time" content={post.data.modified} />

      <div class="m-auto text-center">
        <h1>{post.data.title}</h1>
        <span class="byline">{date}</span>
      </div>
      <Content/>
  </> : <BlogIndex post={post}/>}
</Layout>

